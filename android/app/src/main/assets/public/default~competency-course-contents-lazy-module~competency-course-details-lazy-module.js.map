{"version":3,"sources":["./src/addons/competency/pages/coursecompetencies/coursecompetencies.html","./src/addons/competency/pages/coursecompetencies/coursecompetencies.module.ts","./src/addons/competency/pages/coursecompetencies/coursecompetencies.page.ts"],"names":[],"mappings":"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","file":"default~competency-course-contents-lazy-module~competency-course-details-lazy-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'addon.competency.coursecompetencies' | translate }}</h1>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!competencies.loaded\\\" (ionRefresh)=\\\"refreshCourseCompetencies($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n    <core-loading [hideUntil]=\\\"competencies.loaded\\\">\\n        <ion-card *ngIf=\\\"!user && courseCompetencies && courseCompetencies.statistics.competencycount > 0\\\">\\n            <ng-container *ngIf=\\\"courseCompetencies.cangradecompetencies\\\">\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"courseCompetencies.settings.pushratingstouserplans\\\">\\n                    <ion-label>{{ 'addon.competency.coursecompetencyratingsarepushedtouserplans' | translate }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"!courseCompetencies.settings.pushratingstouserplans\\\" color=\\\"danger\\\">\\n                    <ion-label>{{ 'addon.competency.coursecompetencyratingsarenotpushedtouserplans' | translate }}</ion-label>\\n                </ion-item>\\n            </ng-container>\\n            <ion-item class=\\\"ion-text-wrap\\\" *ngIf=\\\"courseCompetencies.statistics.canbegradedincourse\\\">\\n                <ion-label>\\n                    <span id=\\\"addon-competency-course-{{courseId}}-progress\\\">\\n                        {{ 'addon.competency.xcompetenciesproficientoutofyincourse' | translate: {$a:\\n                        {x: courseCompetencies.statistics.proficientcompetencycount, y: courseCompetencies.statistics.competencycount} } }}\\n                    </span>\\n                    <core-progress-bar [progress]=\\\"courseCompetencies.statistics.proficientcompetencypercentage\\\"\\n                        ariaDescribedBy=\\\"addon-competency-course-{{courseId}}-progress\\\">\\n                    </core-progress-bar>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item class=\\\"ion-text-wrap\\\"\\n                *ngIf=\\\"courseCompetencies.statistics.canmanagecoursecompetencies && courseCompetencies.statistics.leastproficientcount > 0\\\">\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">{{ 'addon.competency.competenciesmostoftennotproficientincourse' | translate }}</p>\\n                    <p *ngFor=\\\"let comp of courseCompetencies.statistics.leastproficient\\\">\\n                        <button class=\\\"as-link\\\" (click)=\\\"openCompetencySummary(comp.id)\\\">\\n                            {{ comp.shortname }} - {{ comp.idnumber }}\\n                        </button>\\n                    </p>\\n                </ion-label>\\n            </ion-item>\\n        </ion-card>\\n\\n        <h2 class=\\\"ion-margin-horizontal\\\" *ngIf=\\\"courseCompetencies && courseCompetencies.statistics.competencycount > 0\\\">\\n            {{ 'addon.competency.coursecompetencies' | translate }}\\n        </h2>\\n        <ion-card *ngIf=\\\"user\\\">\\n            <ion-item class=\\\"ion-text-wrap\\\">\\n                <core-user-avatar [user]=\\\"user\\\" slot=\\\"start\\\"></core-user-avatar>\\n                <ion-label>\\n                    <h2>{{ user.fullname }}</h2>\\n                </ion-label>\\n            </ion-item>\\n        </ion-card>\\n        <core-empty-box *ngIf=\\\"courseCompetencies && courseCompetencies.statistics.competencycount == 0\\\" icon=\\\"fas-award\\\"\\n            message=\\\"{{ 'addon.competency.nocompetenciesincourse' | translate }}\\\">\\n        </core-empty-box>\\n\\n        <div *ngIf=\\\"competencies.loaded\\\">\\n            <ion-card *ngFor=\\\"let competency of competencies.items\\\">\\n                <ion-item class=\\\"ion-text-wrap\\\" (click)=\\\"competencies.select(competency)\\\"\\n                    [attr.aria-label]=\\\"competency.competency.shortname\\\" detail=\\\"true\\\" button>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">\\n                            {{competency.competency.shortname}} <em>{{competency.competency.idnumber}}</em>\\n                        </p>\\n                    </ion-label>\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"competency.usercompetencycourse && competency.usercompetencycourse.gradename\\\"\\n                        [color]=\\\"competency.usercompetencycourse.proficiency ? 'success' : 'danger'\\\">\\n                        {{ competency.usercompetencycourse.gradename }}\\n                    </ion-badge>\\n                </ion-item>\\n                <ion-item class=\\\"ion-text-wrap\\\">\\n                    <ion-label>\\n                        <p *ngIf=\\\"competency.competency.description\\\">\\n                            <core-format-text [text]=\\\"competency.competency.description\\\" contextLevel=\\\"course\\\"\\n                                [contextInstanceId]=\\\"courseId\\\">\\n                            </core-format-text>\\n                        </p>\\n                        <div>\\n                            <p class=\\\"item-heading\\\">{{ 'addon.competency.path' | translate }}</p>\\n                            <p>\\n                                <a *ngIf=\\\"competency.comppath.showlinks\\\" [href]=\\\"getCompetencyFrameworkUrl(competency)\\\" core-link\\n                                    [title]=\\\"competency.comppath.framework.name\\\">\\n                                    {{ competency.comppath.framework.name }}\\n                                </a>\\n                                <ng-container *ngIf=\\\"!competency.comppath.showlinks\\\">\\n                                    {{ competency.comppath.framework.name }}\\n                                </ng-container>\\n                                &nbsp;/&nbsp;\\n                                <ng-container *ngFor=\\\"let ancestor of competency.comppath.ancestors\\\">\\n                                    <button class=\\\"as-link\\\" *ngIf=\\\"competency.comppath.showlinks\\\"\\n                                        (click)=\\\"openCompetencySummary(ancestor.id)\\\">\\n                                        {{ ancestor.name }}\\n                                    </button>\\n                                    <ng-container *ngIf=\\\"!competency.comppath.showlinks\\\">{{ ancestor.name }}</ng-container>\\n                                    <ng-container *ngIf=\\\"!ancestor.last\\\">&nbsp;/&nbsp;</ng-container>\\n                                </ng-container>\\n                            </p>\\n                        </div>\\n                        <div *ngIf=\\\"courseCompetencies?.statistics.canmanagecoursecompetencies\\\">\\n                            <p class=\\\"item-heading\\\">{{ 'addon.competency.uponcoursecompletion' | translate }}</p>\\n                            <ng-container *ngFor=\\\"let ruleoutcome of competency.ruleoutcomeoptions\\\">\\n                                <span *ngIf=\\\"ruleoutcome.selected\\\">{{ ruleoutcome.text }}</span>\\n                            </ng-container>\\n                        </div>\\n                        <div>\\n                            <p class=\\\"item-heading\\\">{{ 'addon.competency.activities' | translate }}</p>\\n                            <p *ngIf=\\\"competency.coursemodules.length == 0\\\">\\n                                {{ 'addon.competency.noactivities' | translate }}\\n                            </p>\\n                            <ion-item class=\\\"ion-text-wrap core-course-module-handler\\\" [attr.aria-label]=\\\"activity.name\\\" core-link\\n                                *ngFor=\\\"let activity of competency.coursemodules\\\" [href]=\\\"activity.url\\\" capture=\\\"true\\\">\\n                                <core-mod-icon slot=\\\"start\\\" [modicon]=\\\"activity.iconurl\\\" [showAlt]=\\\"false\\\" *ngIf=\\\"activity.iconurl\\\">\\n                                </core-mod-icon>\\n                                <ion-label>\\n                                    <core-format-text [text]=\\\"activity.name\\\" contextLevel=\\\"module\\\" [contextInstanceId]=\\\"activity.id\\\"\\n                                        [courseId]=\\\"courseId\\\">\\n                                    </core-format-text>\\n                                </ion-label>\\n                            </ion-item>\\n                        </div>\\n                        <div *ngIf=\\\"competency.plans\\\">\\n                            <p class=\\\"item-heading\\\">{{ 'addon.competency.userplans' | translate }}</p>\\n                            <p *ngIf=\\\"competency.plans.length == 0\\\">\\n                                {{ 'addon.competency.nouserplanswithcompetency' | translate }}\\n                            </p>\\n                            <ion-item class=\\\"ion-text-wrap\\\" *ngFor=\\\"let plan of competency.plans\\\" [href]=\\\"plan.url\\\"\\n                                [attr.aria-label]=\\\"plan.name\\\" core-link capture=\\\"true\\\">\\n                                <ion-label>\\n                                    <core-format-text [text]=\\\"plan.name\\\" contextLevel=\\\"user\\\" [contextInstanceId]=\\\"plan.userid\\\">\\n                                    </core-format-text>\\n                                </ion-label>\\n                            </ion-item>\\n                        </div>\\n                    </ion-label>\\n                </ion-item>\\n            </ion-card>\\n        </div>\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonCompetencyCourseCompetenciesPage } from './coursecompetencies.page';\n\n@NgModule({\n    imports: [\n        CoreSharedModule,\n    ],\n    declarations: [\n        AddonCompetencyCourseCompetenciesPage,\n    ],\n})\nexport class AddonCompetencyCourseCompetenciesPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    AddonCompetencyDataForCourseCompetenciesPageWSResponse,\n    AddonCompetencyDataForCourseCompetenciesPageCompetency,\n} from '@addons/competency/services/competency';\nimport { CoreUserProfile } from '@features/user/services/user';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { ContextLevel } from '@/core/constants';\nimport { ADDON_COMPETENCY_SUMMARY_PAGE } from '@addons/competency/competency.module';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { AddonCompetencyCourseCompetenciesSource } from '@addons/competency/classes/competency-course-competencies-source';\n\n/**\n * Page that displays the list of competencies of a course.\n */\n@Component({\n    selector: 'page-addon-competency-coursecompetencies',\n    templateUrl: 'coursecompetencies.html',\n})\nexport class AddonCompetencyCourseCompetenciesPage implements OnInit, OnDestroy {\n\n    competencies!: CoreListItemsManager<\n        AddonCompetencyDataForCourseCompetenciesPageCompetency,\n        AddonCompetencyCourseCompetenciesSource\n    >;\n\n    constructor() {\n        try {\n            const courseId = CoreNavigator.getRequiredRouteNumberParam('courseId');\n            const userId = CoreNavigator.getRouteNumberParam('userId');\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                AddonCompetencyCourseCompetenciesSource,\n                [courseId, userId],\n            );\n\n            this.competencies = new CoreListItemsManager(source, AddonCompetencyCourseCompetenciesPage);\n        } catch (error) {\n            CoreDomUtils.showErrorModal(error);\n\n            CoreNavigator.back();\n\n            return;\n        }\n    }\n\n    get courseCompetencies(): AddonCompetencyDataForCourseCompetenciesPageWSResponse | undefined {\n        return this.competencies.getSource().courseCompetencies;\n    }\n\n    get courseId(): number {\n        return this.competencies.getSource().COURSE_ID;\n    }\n\n    get user(): CoreUserProfile | undefined {\n        return this.competencies.getSource().user;\n    }\n\n    get showLeastProficientCompetencies(): boolean {\n        return !!this.courseCompetencies?.statistics.canmanagecoursecompetencies\n            && this.courseCompetencies?.statistics.leastproficientcount > 0;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        await this.fetchCourseCompetencies();\n        await this.competencies.start();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.competencies.destroy();\n    }\n\n    /**\n     * Get competency framework url.\n     *\n     * @param competency Competency.\n     * @returns Competency framework url.\n     */\n    getCompetencyFrameworkUrl(competency: AddonCompetencyDataForCourseCompetenciesPageCompetency): string {\n        const { pluginbaseurl, framework, pagecontextid } = competency.comppath;\n\n        return `${pluginbaseurl}/competencies.php?competencyframeworkid=${framework.id}&pagecontextid=${pagecontextid}`;\n    }\n\n    /**\n     * Fetches the competencies and updates the view.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCourseCompetencies(): Promise<void> {\n        try {\n            await this.competencies.getSource().reload();\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error getting course competencies data.');\n        }\n    }\n\n    /**\n     * Opens the summary of a competency.\n     *\n     * @param competencyId\n     */\n    openCompetencySummary(competencyId: number): void {\n        CoreNavigator.navigateToSitePath(\n            `./${competencyId}/${ADDON_COMPETENCY_SUMMARY_PAGE}`,\n            {\n                params: {\n                    contextLevel: ContextLevel.COURSE,\n                    contextInstanceId: this.courseId,\n                },\n            },\n        );\n    }\n\n    /**\n     * Refreshes the competencies.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshCourseCompetencies(refresher?: IonRefresher): Promise<void> {\n        await this.competencies.getSource().invalidateCache();\n\n        this.fetchCourseCompetencies().finally(() => {\n            refresher?.complete();\n        });\n    }\n\n}\n"],"sourceRoot":"webpack:///"}