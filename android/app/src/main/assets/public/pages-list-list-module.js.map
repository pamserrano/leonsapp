{"version":3,"sources":["./src/addons/notifications/pages/list/list.html","./src/core/features/courses/pages/list/list.html","./src/addons/notifications/pages/list/list.module.ts","./src/addons/notifications/pages/list/list.scss","./src/addons/notifications/pages/list/list.ts","./src/core/features/courses/pages/list/list.module.ts","./src/core/features/courses/pages/list/list.ts"],"names":[],"mappings":"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","file":"pages-list-list-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1>{{ 'addon.notifications.notifications' | translate }}</h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-user-menu-button></core-user-menu-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <core-split-view>\\n        <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!notifications.loaded\\\" (ionRefresh)=\\\"refreshNotifications($event.target)\\\">\\n            <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n        </ion-refresher>\\n        <core-loading [hideUntil]=\\\"notifications.loaded\\\">\\n\\n            <ion-item *ngFor=\\\"let notification of notifications.items\\\" class=\\\"ion-text-wrap\\\"\\n                [attr.aria-current]=\\\"notifications.getItemAriaCurrent(notification)\\\" [attr.aria-label]=\\\"\\n                notification.timeread\\n                ? notification.subject\\n                : 'addon.notifications.unreadnotification' | translate: {$a: notification.subject}\\\"\\n                (click)=\\\"notifications.select(notification)\\\" button [detail]=\\\"false\\\" lines=\\\"full\\\">\\n\\n                <core-user-avatar *ngIf=\\\"notification.useridfrom > 0\\\" [user]=\\\"notification\\\" slot=\\\"start\\\"\\n                    [profileUrl]=\\\"notification.profileimageurlfrom\\\" [fullname]=\\\"notification.userfromfullname\\\"\\n                    [userId]=\\\"notification.useridfrom\\\">\\n                    <div class=\\\"core-avatar-extra-img\\\" *ngIf=\\\"notification.iconurl && !notification.modname\\\">\\n                        <img [src]=\\\"notification.iconurl\\\" alt=\\\"\\\" role=\\\"presentation\\\">\\n                    </div>\\n                    <core-mod-icon *ngIf=\\\"notification.modname\\\" [modicon]=\\\"notification.iconurl\\\" [modname]=\\\"notification.modname\\\"\\n                        [showAlt]=\\\"false\\\">\\n                    </core-mod-icon>\\n                </core-user-avatar>\\n\\n                <ng-container *ngIf=\\\"notification.useridfrom <= 0 && notification.iconurl\\\">\\n                    <div class=\\\"core-notification-icon\\\" *ngIf=\\\"!notification.modname\\\" slot=\\\"start\\\">\\n                        <img [src]=\\\"notification.iconurl\\\" alt=\\\"\\\" role=\\\"presentation\\\">\\n                    </div>\\n                    <core-mod-icon *ngIf=\\\"notification.modname\\\" [modicon]=\\\"notification.iconurl\\\" [modname]=\\\"notification.modname\\\"\\n                        [showAlt]=\\\"false\\\" class=\\\"core-notification-icon\\\" slot=\\\"start\\\">\\n                    </core-mod-icon>\\n                </ng-container>\\n\\n                <ion-label>\\n                    <p class=\\\"item-heading\\\">\\n                        <core-format-text [text]=\\\"notification.subject\\\" contextLevel=\\\"system\\\" [contextInstanceId]=\\\"0\\\"\\n                            [wsNotFiltered]=\\\"true\\\">\\n                        </core-format-text>\\n                    </p>\\n                    <p>{{ notification.timecreated | coreTimeAgo }}<ng-container *ngIf=\\\"notification.useridfrom > 0\\\"> · {{\\n                            notification.userfromfullname }}</ng-container>\\n                    </p>\\n                </ion-label>\\n                <ion-note slot=\\\"end\\\" *ngIf=\\\"!notification.timeread\\\">\\n                    <ion-icon name=\\\"fas-circle\\\" color=\\\"primary\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                </ion-note>\\n            </ion-item>\\n\\n            <core-empty-box *ngIf=\\\"!notifications || notifications.empty\\\" icon=\\\"far-bell\\\"\\n                [message]=\\\"'addon.notifications.therearentnotificationsyet' | translate\\\">\\n            </core-empty-box>\\n            <core-infinite-loading [enabled]=\\\"notifications.loaded && !notifications.completed\\\" (action)=\\\"fetchMoreNotifications($event)\\\"\\n                [error]=\\\"fetchMoreNotificationsFailed\\\">\\n            </core-infinite-loading>\\n        </core-loading>\\n\\n\\n        <div class=\\\"mark-all-as-read\\\" slot=\\\"fixed\\\" collapsible-footer appearOnBottom>\\n            <ion-chip *ngIf=\\\"notifications.loaded && canMarkAllNotificationsAsRead\\\" [disabled]=\\\"loadingMarkAllNotificationsAsRead\\\"\\n                color=\\\"primary\\\" (click)=\\\"markAllNotificationsAsRead()\\\">\\n                <ion-icon name=\\\"fas-eye\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!loadingMarkAllNotificationsAsRead\\\"></ion-icon>\\n                <ion-spinner [attr.aria-label]=\\\"'core.loading' | translate\\\" *ngIf=\\\"loadingMarkAllNotificationsAsRead\\\">\\n                </ion-spinner>\\n                {{ 'addon.notifications.markallread' | translate }}\\n            </ion-chip>\\n        </div>\\n    </core-split-view>\\n</ion-content>\\n\";","export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>\\n            <h1 *ngIf=\\\"!showOnlyEnrolled\\\">{{ 'core.courses.availablecourses' | translate }}</h1>\\n            <h1 *ngIf=\\\"showOnlyEnrolled\\\">{{ 'core.courses.mycourses' | translate }}</h1>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <core-context-menu>\\n                <core-context-menu-item *ngIf=\\\"downloadCourseEnabled || downloadCoursesEnabled\\\" [priority]=\\\"1000\\\"\\n                    [content]=\\\"'core.settings.showdownloadoptions' | translate\\\" (action)=\\\"toggleDownload()\\\" iconAction=\\\"toggle\\\"\\n                    [(toggle)]=\\\"downloadEnabled\\\"></core-context-menu-item>\\n                <core-context-menu-item [priority]=\\\"900\\\" [content]=\\\"'core.courses.showonlyenrolled' | translate\\\" (action)=\\\"toggleEnrolled()\\\"\\n                    iconAction=\\\"toggle\\\" [(toggle)]=\\\"showOnlyEnrolled\\\"></core-context-menu-item>\\n            </core-context-menu>\\n            <core-user-menu-button></core-user-menu-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-refresher slot=\\\"fixed\\\" [disabled]=\\\"!loaded\\\" (ionRefresh)=\\\"refreshCourses($event.target)\\\">\\n        <ion-refresher-content pullingText=\\\"{{ 'core.pulltorefresh' | translate }}\\\"></ion-refresher-content>\\n    </ion-refresher>\\n\\n    <core-search-box *ngIf=\\\"searchEnabled\\\" (onSubmit)=\\\"search($event)\\\" (onClear)=\\\"clearSearch()\\\"\\n        [placeholder]=\\\"'core.courses.search' | translate\\\" [searchLabel]=\\\"'core.courses.search' | translate\\\" [autoFocus]=\\\"searchMode\\\"\\n        searchArea=\\\"CoreCoursesSearch\\\"></core-search-box>\\n\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ng-container *ngIf=\\\"searchMode && searchTotal > 0\\\">\\n            <ion-item-divider>\\n                <ion-label>\\n                    <h2>{{ 'core.courses.totalcoursesearchresults' | translate:{$a: searchTotal} }}</h2>\\n                </ion-label>\\n            </ion-item-divider>\\n        </ng-container>\\n\\n        <ion-list class=\\\"list-item-limited-width\\\">\\n            <core-courses-course-list-item *ngFor=\\\"let course of courses\\\" [course]=\\\"course\\\" [showDownload]=\\\"downloadEnabled\\\">\\n            </core-courses-course-list-item>\\n        </ion-list>\\n\\n        <core-infinite-loading [enabled]=\\\"canLoadMore\\\" (action)=\\\"loadMoreCourses($event)\\\" [error]=\\\"loadMoreError\\\">\\n        </core-infinite-loading>\\n\\n\\n        <core-empty-box *ngIf=\\\"searchMode && !courses.length\\\" icon=\\\"fas-search\\\" [message]=\\\"'core.courses.nosearchresults' | translate\\\">\\n        </core-empty-box>\\n\\n        <core-empty-box *ngIf=\\\"!searchMode && !courses.length\\\" icon=\\\"fas-graduation-cap\\\" [message]=\\\"'core.courses.nocourses' | translate\\\">\\n        </core-empty-box>\\n\\n    </core-loading>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { AddonNotificationsListPage } from './list';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\nimport { conditionalRoutes } from '@/app/app-routing.module';\nimport { CoreScreen } from '@services/screen';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddonNotificationsListPage,\n        children: conditionalRoutes([\n            {\n                path: ':id',\n                loadChildren: () => import('../../pages/notification/notification.module')\n                    .then(m => m.AddonNotificationsNotificationPageModule),\n            },\n        ], () => CoreScreen.isTablet),\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreMainMenuComponentsModule,\n    ],\n    declarations: [\n        AddonNotificationsListPage,\n    ],\n    exports: [RouterModule],\n})\nexport class AddonNotificationsListPageModule {}\n","export default \"/**\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here the different files you should import to use global variables.\\n */\\n/**\\n * Imported ionic string functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.string.scss\\n */\\n/**\\n * Imported ionic color functions for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.functions.color.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/themes/ionic.mixins.scss\\n */\\n/**\\n * Imported ionic mixins for SCSS from different components\\n * ----------------------------------------------------------------------------\\n * Extracted from\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/grid/grid.mixins.scss\\n * https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/item/item.mixins.scss\\n */\\n/**\\n * App custom mixins for SCSS\\n * ----------------------------------------------------------------------------\\n * Place here our custom mixins.\\n */\\n/**\\n * Same as item-push-svg-url but admits flip-rtl\\n */\\n/*\\n * App Custom App variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all custom app variables.\\n */\\n/*\\n * App Global variables SCSS\\n * ----------------------------------------------------------------------------\\n * Place here all global variables.\\n */\\n/**\\n * Layout Breakpoints\\n *\\n * https://ionicframework.com/docs/layout/grid#default-breakpoints\\n */\\nion-item {\\n  --icon-size: 16px;\\n  --extra-icon-size: 12px;\\n  --core-avatar-size: 32px;\\n}\\nion-item ion-label {\\n  margin-top: 8px;\\n  margin-bottom: 8px;\\n}\\nion-item ion-label p.item-heading {\\n  font-size: var(--text-size);\\n  -webkit-line-clamp: 3;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  -webkit-box-orient: vertical;\\n  display: -webkit-box;\\n}\\nion-item ion-label p {\\n  font-size: 12px;\\n}\\nion-item ion-note {\\n  margin: 0;\\n  padding-left: 8px;\\n  padding-right: 0;\\n  padding-top: 12px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  ion-item ion-note {\\n    padding-left: unset;\\n    padding-right: unset;\\n    -webkit-padding-start: 8px;\\n    padding-inline-start: 8px;\\n    -webkit-padding-end: 0;\\n    padding-inline-end: 0;\\n  }\\n}\\nion-item ion-note ion-icon {\\n  font-size: 6px;\\n  vertical-align: middle;\\n}\\nion-item [slot=start] {\\n  align-self: start;\\n  margin-top: 16px;\\n}\\nion-item div.core-notification-icon,\\nion-item core-mod-icon.core-notification-icon {\\n  padding: 8px;\\n  max-width: var(--core-avatar-size);\\n  max-height: var(--core-avatar-size);\\n}\\n.mark-all-as-read {\\n  padding-bottom: 16px;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  display: flex;\\n  background: transparent;\\n  box-shadow: none;\\n  pointer-events: none;\\n}\\n.mark-all-as-read ion-chip.ion-color {\\n  pointer-events: all;\\n  margin: 0 auto;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\\n}\\n.mark-all-as-read ion-chip.ion-color ion-spinner {\\n  width: 16px;\\n  height: 16px;\\n  margin-left: 0;\\n  margin-right: 8px;\\n}\\n@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0) {\\n  .mark-all-as-read ion-chip.ion-color ion-spinner {\\n    margin-left: unset;\\n    margin-right: unset;\\n    -webkit-margin-start: 0;\\n    margin-inline-start: 0;\\n    -webkit-margin-end: 8px;\\n    margin-inline-end: 8px;\\n  }\\n}\\nion-content::part(scroll) {\\n  padding-bottom: 44px;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { AfterViewInit, Component, OnDestroy, ViewChild } from '@angular/core';\nimport { IonRefresher } from '@ionic/angular';\nimport { Subscription } from 'rxjs';\n\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreUtils } from '@services/utils/utils';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport {\n    AddonNotifications, AddonNotificationsProvider,\n} from '../../services/notifications';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreRoutedItemsManagerSourcesTracker } from '@classes/items-management/routed-items-manager-sources-tracker';\nimport { CorePushNotificationsDelegate } from '@features/pushnotifications/services/push-delegate';\nimport { CoreSites } from '@services/sites';\nimport { CoreMainMenuDeepLinkManager } from '@features/mainmenu/classes/deep-link-manager';\nimport { CoreTimeUtils } from '@services/utils/time';\nimport { AddonNotificationsNotificationsSource } from '@addons/notifications/classes/notifications-source';\nimport { CoreListItemsManager } from '@classes/items-management/list-items-manager';\nimport { AddonNotificationsNotificationToRender } from '@addons/notifications/services/notifications-helper';\nimport { AddonLegacyNotificationsNotificationsSource } from '@addons/notifications/classes/legacy-notifications-source';\n\n/**\n * Page that displays the list of notifications.\n */\n@Component({\n    selector: 'page-addon-notifications-list',\n    templateUrl: 'list.html',\n    styleUrls: ['list.scss', '../../notifications.scss'],\n})\nexport class AddonNotificationsListPage implements AfterViewInit, OnDestroy {\n\n    @ViewChild(CoreSplitViewComponent) splitView!: CoreSplitViewComponent;\n    notifications!: CoreListItemsManager<AddonNotificationsNotificationToRender, AddonNotificationsNotificationsSource>;\n    fetchMoreNotificationsFailed = false;\n    canMarkAllNotificationsAsRead = false;\n    loadingMarkAllNotificationsAsRead = false;\n\n    protected isCurrentView?: boolean;\n    protected cronObserver?: CoreEventObserver;\n    protected readObserver?: CoreEventObserver;\n    protected pushObserver?: Subscription;\n    protected pendingRefresh = false;\n\n    constructor() {\n        try {\n            const source = CoreRoutedItemsManagerSourcesTracker.getOrCreateSource(\n                CoreSites.getRequiredCurrentSite().isVersionGreaterEqualThan('4.0')\n                    ? AddonNotificationsNotificationsSource\n                    : AddonLegacyNotificationsNotificationsSource,\n                [],\n            );\n\n            this.notifications = new CoreListItemsManager(source, AddonNotificationsListPage);\n        } catch(error) {\n            CoreDomUtils.showErrorModal(error);\n            CoreNavigator.back();\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    async ngAfterViewInit(): Promise<void> {\n        await this.fetchInitialNotifications();\n\n        this.notifications.start(this.splitView);\n\n        this.cronObserver = CoreEvents.on(AddonNotificationsProvider.READ_CRON_EVENT, () => {\n            if (!this.isCurrentView) {\n                return;\n            }\n\n            this.refreshNotifications();\n        }, CoreSites.getCurrentSiteId());\n\n        this.pushObserver = CorePushNotificationsDelegate.on('receive').subscribe((notification) => {\n            // New notification received. If it's from current site, refresh the data.\n            if (!this.isCurrentView) {\n                this.pendingRefresh = true;\n\n                return;\n            }\n\n            if (!CoreUtils.isTrueOrOne(notification.notif) || !CoreSites.isCurrentSite(notification.site)) {\n                return;\n            }\n\n            this.refreshNotifications();\n        });\n\n        this.readObserver = CoreEvents.on(AddonNotificationsProvider.READ_CHANGED_EVENT, (data) => {\n            if (!data.id) {\n                return;\n            }\n\n            const notification = this.notifications.items.find((notification) => notification.id === data.id);\n            if (!notification) {\n                return;\n            }\n\n            notification.read = true;\n            notification.timeread = data.time;\n            this.loadMarkAllAsReadButton();\n        });\n\n        const deepLinkManager = new CoreMainMenuDeepLinkManager();\n        deepLinkManager.treatLink();\n    }\n\n    /**\n     * Convenience function to get notifications. Gets unread notifications first.\n     *\n     * @param reload Whether to reload the list or load the next page.\n     */\n    protected async fetchNotifications(reload: boolean): Promise<void> {\n        reload\n            ? await this.notifications.reload()\n            : await this.notifications.load();\n\n        this.fetchMoreNotificationsFailed = false;\n        this.loadMarkAllAsReadButton();\n    }\n\n    /**\n     * Obtain the initial batch of notifications.\n     */\n    private async fetchInitialNotifications(): Promise<void> {\n        try {\n            await this.fetchNotifications(true);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading notifications');\n\n            this.notifications.reset();\n        }\n    }\n\n    /**\n     * Load a new batch of Notifications.\n     *\n     * @param complete Completion callback.\n     */\n    async fetchMoreNotifications(complete: () => void): Promise<void> {\n        try {\n            await this.fetchNotifications(false);\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading more notifications');\n\n            this.fetchMoreNotificationsFailed = true;\n        }\n\n        complete();\n    }\n\n    /**\n     * Mark all notifications as read.\n     *\n     * @return Promise resolved when done.\n     */\n    async markAllNotificationsAsRead(): Promise<void> {\n        this.loadingMarkAllNotificationsAsRead = true;\n\n        await CoreUtils.ignoreErrors(AddonNotifications.markAllNotificationsAsRead());\n\n        CoreEvents.trigger(AddonNotificationsProvider.READ_CHANGED_EVENT, {\n            time: CoreTimeUtils.timestamp(),\n        }, CoreSites.getCurrentSiteId());\n\n        await this.refreshNotifications();\n    }\n\n    /**\n     * Load mark all notifications as read button.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async loadMarkAllAsReadButton(): Promise<void> {\n        // Check if mark all as read should be displayed (there are unread notifications).\n        try {\n            this.loadingMarkAllNotificationsAsRead = true;\n\n            const unreadCountData = await AddonNotifications.getUnreadNotificationsCount();\n\n            this.canMarkAllNotificationsAsRead = unreadCountData.count > 0;\n        } finally {\n            this.loadingMarkAllNotificationsAsRead = false;\n        }\n    }\n\n    /**\n     * Refresh notifications.\n     *\n     * @param refresher Refresher.\n     */\n    async refreshNotifications(refresher?: IonRefresher): Promise<void> {\n        await CoreUtils.ignoreErrors(AddonNotifications.invalidateNotificationsList());\n        await CoreUtils.ignoreErrors(this.fetchNotifications(true));\n\n        refresher?.complete();\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.isCurrentView = true;\n\n        if (!this.pendingRefresh) {\n            return;\n        }\n\n        this.pendingRefresh = false;\n\n        this.refreshNotifications();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.isCurrentView = false;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.cronObserver?.off();\n        this.readObserver?.off();\n        this.pushObserver?.unsubscribe();\n        this.notifications?.destroy();\n    }\n\n}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\nimport { CoreSearchComponentsModule } from '@features/search/components/components.module';\n\nimport { CoreCoursesListPage } from './list';\nimport { CoreMainMenuComponentsModule } from '@features/mainmenu/components/components.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreCoursesListPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n        CoreCoursesComponentsModule,\n        CoreSearchComponentsModule,\n        CoreMainMenuComponentsModule,\n    ],\n    declarations: [\n        CoreCoursesListPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreCoursesListPageModule { }\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CoreCoursesHelper, CoreEnrolledCourseDataWithExtraInfo } from '@features/courses/services/courses-helper';\nimport { IonRefresher } from '@ionic/angular';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreSites } from '@services/sites';\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { CoreEventObserver, CoreEvents } from '@singletons/events';\nimport { CoreCourseBasicSearchedData, CoreCourses, CoreCoursesProvider } from '../../services/courses';\n\ntype CoreCoursesListMode = 'search' | 'all' | 'my';\n\n/**\n * Page that shows a list of courses.\n */\n@Component({\n    selector: 'page-core-courses-list',\n    templateUrl: 'list.html',\n})\nexport class CoreCoursesListPage implements OnInit, OnDestroy {\n\n    downloadAllCoursesEnabled = false;\n\n    searchEnabled = false;\n    searchMode = false;\n    searchTotal = 0;\n\n    downloadEnabled = false;\n    downloadCourseEnabled = false;\n    downloadCoursesEnabled = false;\n\n    courses: (CoreCourseBasicSearchedData|CoreEnrolledCourseDataWithExtraInfo)[] = [];\n    loaded = false;\n    coursesLoaded = 0;\n    canLoadMore = false;\n    loadMoreError = false;\n\n    showOnlyEnrolled = false;\n\n    protected loadedCourses: (CoreCourseBasicSearchedData|CoreEnrolledCourseDataWithExtraInfo)[] = [];\n    protected loadCoursesPerPage = 20;\n    protected currentSiteId: string;\n    protected frontpageCourseId: number;\n    protected searchPage = 0;\n    protected searchText = '';\n    protected myCoursesObserver: CoreEventObserver;\n    protected siteUpdatedObserver: CoreEventObserver;\n    protected downloadEnabledObserver: CoreEventObserver;\n    protected courseIds = '';\n    protected isDestroyed = false;\n\n    constructor() {\n        this.currentSiteId = CoreSites.getRequiredCurrentSite().getId();\n        this.frontpageCourseId = CoreSites.getRequiredCurrentSite().getSiteHomeId();\n\n        // Update list if user enrols in a course.\n        this.myCoursesObserver = CoreEvents.on(\n            CoreCoursesProvider.EVENT_MY_COURSES_UPDATED,\n            (data) => {\n\n                if (data.action == CoreCoursesProvider.ACTION_ENROL) {\n                    this.fetchCourses();\n                }\n            },\n\n            this.currentSiteId,\n        );\n\n        // Refresh the enabled flags if site is updated.\n        this.siteUpdatedObserver = CoreEvents.on(CoreEvents.SITE_UPDATED, () => {\n            this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n            this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n            this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && this.downloadEnabled;\n            if (!this.searchEnabled && this.searchMode) {\n                this.searchMode = false;\n\n                this.fetchCourses();\n            }\n        }, this.currentSiteId);\n\n        this.downloadEnabledObserver = CoreEvents.on(CoreCoursesProvider.EVENT_DASHBOARD_DOWNLOAD_ENABLED_CHANGED, (data) => {\n            this.downloadEnabled = (this.downloadCourseEnabled || this.downloadCoursesEnabled) && data.enabled;\n        });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnInit(): void {\n        this.downloadCourseEnabled = !CoreCourses.isDownloadCourseDisabledInSite();\n        this.downloadCoursesEnabled = !CoreCourses.isDownloadCoursesDisabledInSite();\n\n        this.downloadEnabled =\n            (this.downloadCourseEnabled || this.downloadCoursesEnabled) && CoreCourses.getCourseDownloadOptionsEnabled();\n\n        const mode = CoreNavigator.getRouteParam<CoreCoursesListMode>('mode') || 'my';\n\n        if (mode == 'search') {\n            this.searchMode = true;\n        }\n\n        if (mode == 'my') {\n            this.showOnlyEnrolled = true;\n        }\n\n        this.searchEnabled = !CoreCourses.isSearchCoursesDisabledInSite();\n        if (!this.searchEnabled) {\n            this.searchMode = false;\n        }\n\n        this.fetchCourses();\n    }\n\n    /**\n     * Load the course list.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async fetchCourses(): Promise<void> {\n        try {\n            if (this.searchMode) {\n                if (this.searchText) {\n                    await this.search(this.searchText);\n                }\n            } else {\n                await this.loadCourses(true);\n            }\n        } finally {\n            this.loaded = true;\n        }\n    }\n\n    /**\n     * Fetch the courses.\n     *\n     * @param clearTheList If list needs to be reloaded.\n     * @return Promise resolved when done.\n     */\n    protected async loadCourses(clearTheList = false): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            if (clearTheList) {\n                if (this.showOnlyEnrolled) {\n                    this.loadedCourses = await CoreCourses.getUserCourses();\n                } else {\n                    const courses = await CoreCourses.getCoursesByField();\n                    this.loadedCourses = courses.filter((course) => course.id != this.frontpageCourseId);\n                }\n\n                this.coursesLoaded = 0;\n                this.courses = [];\n            }\n\n            const addCourses = this.loadedCourses.slice(this.coursesLoaded, this.coursesLoaded + this.loadCoursesPerPage);\n            await CoreCoursesHelper.loadCoursesExtraInfo(addCourses, true);\n\n            this.courses = this.courses.concat(addCourses);\n\n            this.courseIds = this.courses.map((course) => course.id).join(',');\n\n            this.coursesLoaded = this.courses.length;\n            this.canLoadMore = this.loadedCourses.length > this.courses.length;\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorloadcourses', true);\n        }\n\n    }\n\n    /**\n     * Refresh the courses.\n     *\n     * @param refresher Refresher.\n     */\n    refreshCourses(refresher: IonRefresher): void {\n        const promises: Promise<void>[] = [];\n\n        if (!this.searchMode) {\n            if (this.showOnlyEnrolled) {\n                promises.push(CoreCourses.invalidateUserCourses());\n            } else {\n                promises.push(CoreCourses.invalidateCoursesByField());\n            }\n\n            if (this.courseIds) {\n                promises.push(CoreCourses.invalidateCoursesByField('ids', this.courseIds));\n            }\n        }\n\n        Promise.all(promises).finally(() => {\n            this.fetchCourses().finally(() => {\n                refresher?.complete();\n            });\n        });\n    }\n\n    /**\n     * Search a new text.\n     *\n     * @param text The text to search.\n     */\n    async search(text: string): Promise<void> {\n        this.searchMode = true;\n        this.searchText = text;\n        this.courses = [];\n        this.searchPage = 0;\n        this.searchTotal = 0;\n\n        const modal = await CoreDomUtils.showModalLoading('core.searching', true);\n        await this.searchCourses().finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Clear search box.\n     */\n    clearSearch(): void {\n        this.searchText = '';\n        this.courses = [];\n        this.searchPage = 0;\n        this.searchTotal = 0;\n        this.searchMode = false;\n\n        this.loaded = false;\n        this.fetchCourses();\n    }\n\n    /**\n     * Load more courses.\n     *\n     * @param infiniteComplete Infinite scroll complete function. Only used from core-infinite-loading.\n     */\n    async loadMoreCourses(infiniteComplete?: () => void ): Promise<void> {\n        try {\n            if (this.searchMode) {\n                await this.searchCourses();\n            } else {\n                await this.loadCourses();\n            }\n        } finally {\n            infiniteComplete && infiniteComplete();\n        }\n    }\n\n    /**\n     * Search courses or load the next page of current search.\n     *\n     * @return Promise resolved when done.\n     */\n    protected async searchCourses(): Promise<void> {\n        this.loadMoreError = false;\n\n        try {\n            const response = await CoreCourses.search(this.searchText, this.searchPage, undefined, this.showOnlyEnrolled);\n\n            if (this.searchPage === 0) {\n                this.courses = response.courses;\n            } else {\n                this.courses = this.courses.concat(response.courses);\n            }\n            this.searchTotal = response.total;\n\n            this.searchPage++;\n            this.canLoadMore = this.courses.length < this.searchTotal;\n        } catch (error) {\n            this.loadMoreError = true; // Set to prevent infinite calls with infinite-loading.\n            !this.isDestroyed && CoreDomUtils.showErrorModalDefault(error, 'core.courses.errorsearching', true);\n        }\n    }\n\n    /**\n     * Toggle show only my courses.\n     */\n    toggleEnrolled(): void {\n        this.loaded = false;\n        this.fetchCourses();\n    }\n\n    /**\n     * Toggle download enabled.\n     */\n    toggleDownload(): void {\n        CoreCourses.setCourseDownloadOptionsEnabled(this.downloadEnabled);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    ngOnDestroy(): void {\n        this.myCoursesObserver.off();\n        this.siteUpdatedObserver.off();\n        this.downloadEnabledObserver.off();\n        this.isDestroyed = true;\n    }\n\n}\n"],"sourceRoot":"webpack:///"}