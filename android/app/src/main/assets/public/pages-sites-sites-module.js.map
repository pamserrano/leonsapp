{"version":3,"sources":["./src/core/features/login/pages/sites/sites.html","./src/core/features/login/pages/sites/sites.module.ts","./src/core/features/login/pages/sites/sites.ts"],"names":[],"mappings":"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","file":"pages-sites-sites-module.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button [text]=\\\"'core.back' | translate\\\"></ion-back-button>\\n        </ion-buttons>\\n\\n        <ion-title>\\n            <h1>{{ 'core.login.accounts' | translate }}</h1>\\n        </ion-title>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button fill=\\\"clear\\\" *ngIf=\\\"accountsList.count > 0\\\" (click)=\\\"toggleDelete()\\\"\\n                [attr.aria-label]=\\\"'core.login.toggleremove' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-pen\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n            <ion-button (click)=\\\"openSettings()\\\" [attr.aria-label]=\\\"'core.settings.appsettings' | translate\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"fas-cog\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"limited-width\\\">\\n    <core-loading [hideUntil]=\\\"loaded\\\">\\n        <ion-list class=\\\"core-sitelist\\\">\\n            <ion-card *ngFor=\\\"let sites of accountsList.otherSites\\\">\\n                <ion-item-divider sticky=\\\"true\\\" *ngIf=\\\"sites[0]\\\" class=\\\"core-sitelist-sitename\\\">\\n                    <ion-label>\\n                        <h2>\\n                            <core-format-text [text]=\\\"sites[0].siteName\\\" clean=\\\"true\\\" [siteId]=\\\"sites[0].id\\\"></core-format-text>\\n                        </h2>\\n                        <p><a [href]=\\\"sites[0].siteUrl\\\" core-link autoLogin=\\\"no\\\">{{ sites[0].siteUrlWithoutProtocol }}</a></p>\\n                    </ion-label>\\n                </ion-item-divider>\\n\\n                <ion-item button *ngFor=\\\"let site of sites\\\" (click)=\\\"login($event, site.id)\\\" detail=\\\"true\\\">\\n                    <ion-avatar slot=\\\"start\\\">\\n                        <img [src]=\\\"site.avatar\\\" core-external-content [siteId]=\\\"site.id\\\"\\n                            alt=\\\"{{ 'core.pictureof' | translate:{$a: site.fullName} }}\\\" onError=\\\"this.src='assets/img/user-avatar.png'\\\">\\n                    </ion-avatar>\\n                    <ion-label>\\n                        <p class=\\\"item-heading\\\">{{site.fullName}}</p>\\n                    </ion-label>\\n                    <ion-badge slot=\\\"end\\\" *ngIf=\\\"!showDelete && site.badge\\\" @coreShowHideAnimation>\\n                        <span aria-hidden=\\\"true\\\">{{site.badge}}</span>\\n                        <span class=\\\"sr-only\\\">{{ 'core.login.sitebadgedescription' | translate:{ count: site.badge }\\n                            }}</span>\\n                    </ion-badge>\\n                    <ion-button *ngIf=\\\"showDelete\\\" slot=\\\"end\\\" fill=\\\"clear\\\" color=\\\"danger\\\" (click)=\\\"deleteSite($event, site)\\\"\\n                        [attr.aria-label]=\\\"'core.login.removeaccount' | translate\\\" [@coreSlideInOut]=\\\"'fromRight'\\\">\\n                        <ion-icon name=\\\"fas-trash\\\" slot=\\\"icon-only\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n                    </ion-button>\\n                </ion-item>\\n            </ion-card>\\n        </ion-list>\\n    </core-loading>\\n    <ion-fab slot=\\\"fixed\\\" core-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\">\\n        <ion-fab-button (click)=\\\"add()\\\" [attr.aria-label]=\\\"'core.login.add' | translate\\\">\\n            <ion-icon name=\\\"fas-plus\\\" aria-hidden=\\\"true\\\"></ion-icon>\\n            <span class=\\\"sr-only\\\">{{ 'core.login.add' | translate }}</span>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CoreSharedModule } from '@/core/shared.module';\nimport { CoreLoginSitesPage } from './sites';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CoreLoginSitesPage,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes),\n        CoreSharedModule,\n    ],\n    declarations: [\n        CoreLoginSitesPage,\n    ],\n    exports: [RouterModule],\n})\nexport class CoreLoginSitesPageModule {}\n","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreDomUtils } from '@services/utils/dom';\nimport { Component, OnInit } from '@angular/core';\n\nimport { CoreSiteBasicInfo, CoreSites } from '@services/sites';\nimport { CoreAccountsList, CoreLoginHelper } from '@features/login/services/login-helper';\nimport { CoreNavigator } from '@services/navigator';\nimport { CoreFilter } from '@features/filter/services/filter';\nimport { CoreAnimations } from '@components/animations';\n\n/**\n * Page that displays a \"splash screen\" while the app is being initialized.\n */\n@Component({\n    selector: 'page-core-login-sites',\n    templateUrl: 'sites.html',\n    styleUrls: ['../../sitelist.scss'],\n    animations: [CoreAnimations.SLIDE_IN_OUT, CoreAnimations.SHOW_HIDE],\n})\nexport class CoreLoginSitesPage implements OnInit {\n\n    accountsList: CoreAccountsList = {\n        sameSite: [],\n        otherSites: [],\n        count: 0,\n    };\n\n    showDelete = false;\n    loaded = false;\n\n    /**\n     * @inheritdoc\n     */\n    async ngOnInit(): Promise<void> {\n        if (CoreNavigator.getRouteBooleanParam('openAddSite')) {\n            this.add();\n        }\n\n        this.accountsList = await CoreLoginHelper.getAccountsList();\n        this.loaded = true;\n\n        if (this.accountsList.count == 0) {\n            this.add();\n        }\n    }\n\n    /**\n     * Go to the page to add a site.\n     */\n    add(): void {\n        CoreLoginHelper.goToAddSite(false, true);\n    }\n\n    /**\n     * Delete a site.\n     *\n     * @param event Click event.\n     * @param site Site to delete.\n     * @return Promise resolved when done.\n     */\n    async deleteSite(event: Event, site: CoreSiteBasicInfo): Promise<void> {\n        event.stopPropagation();\n\n        let siteName = site.siteName || '';\n\n        siteName = await CoreFilter.formatText(siteName, { clean: true, singleLine: true, filter: false }, [], site.id);\n\n        try {\n            await CoreDomUtils.showDeleteConfirm('core.login.confirmdeletesite', { sitename: siteName });\n        } catch (error) {\n            // User cancelled, stop.\n            return;\n        }\n\n        try {\n            await CoreLoginHelper.deleteAccountFromList(this.accountsList, site);\n\n            this.showDelete = false;\n\n            // If there are no sites left, go to add site.\n            if (this.accountsList.count == 0) {\n                CoreLoginHelper.goToAddSite(true, true);\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'core.login.errordeletesite', true);\n        }\n    }\n\n    /**\n     * Login in a site.\n     *\n     * @param event Click event.\n     * @param siteId The site ID.\n     * @return Promise resolved when done.\n     */\n    async login(event: Event, siteId: string): Promise<void> {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const modal = await CoreDomUtils.showModalLoading();\n\n        try {\n            const loggedIn = await CoreSites.loadSite(siteId);\n\n            if (loggedIn) {\n                await CoreNavigator.navigateToSiteHome();\n\n                return;\n            }\n        } catch (error) {\n            CoreDomUtils.showErrorModalDefault(error, 'Error loading site.');\n        } finally {\n            modal.dismiss();\n        }\n    }\n\n    /**\n     * Toggle delete.\n     */\n    toggleDelete(): void {\n        this.showDelete = !this.showDelete;\n    }\n\n    /**\n     * Open settings page.\n     */\n    openSettings(): void {\n        CoreNavigator.navigate('/settings');\n    }\n\n}\n"],"sourceRoot":"webpack:///"}